name: CI

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - "*"
  schedule:
    # Daily at 05:47
    - cron: '47 5 * * *'

env:
  PACKAGE_NAME: 'qtrio'

jobs:
  Windows:
    name: 'Windows (${{ matrix.python }}, ${{ matrix.qt_library }})'
    timeout-minutes: 20
    runs-on: 'windows-latest'
    strategy:
      fail-fast: false
      matrix:
        python: ['3.8']
        qt_library: ['PySide2']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: '${{ matrix.python }}'
      - name: Run tests
        run: ./ci.sh
        shell: bash
        env:
          # Should match 'name:' up above
          JOB_NAME: 'Windows (${{ matrix.python }}, ${{ matrix.arch }}, ${{ matrix.qt_library }})'
          INSTALL_EXTRAS: '[${{ matrix.qt_library }},tests]'
          QT_QPA_PLATFORM: 'offscreen'
      - name: Download
        run: Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
      - name: Extract
        run: Expand-Archive ngrok.zip
      - name: Auth
        run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      - name: Enable TS
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
      - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
      - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
      - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
      - name: Create Tunnel
        run: .\ngrok\ngrok.exe tcp 3389

  all:
    name: All
    runs-on: ubuntu-latest
    needs:
      - Windows
    steps:
      - name: This
        shell: python
        run: |
          import this
